---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

type ApartmentEntry = CollectionEntry<"apartment">;

// 1) Tell Astro which slugs to build
export async function getStaticPaths() {
  const apartments = await getCollection("apartment", ({ data }) => data.published !== false);
  return apartments.map((entry) => ({
    params: { slug: entry.slug },   // filename-based slug
    props: { entry },               // pass the entry down
  }));
}

// 2) Receive the entry from props
const { entry } = Astro.props as { entry: ApartmentEntry };

// If you want Markdown content, render it:
const rendered = await entry.render();
const { Content } = rendered;

const { data } = entry;

// SEO
const title = data.seo?.title ?? data.title;
const description = data.seo?.description ?? data.description;
const canonical = data.seo?.canonical ?? `https://www.calamon.com/apartments/${entry.slug}`;

// Gallery typed
const gallery: string[] = data.gallery ?? [];

// JSON-LD
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "Apartment",
  name: data.title,
  description: data.description,
  image: data.heroImage ? `https://www.calamon.com${data.heroImage}` : undefined,
  amenityFeature: (data.amenities ?? []).map((a: string) => ({
    "@type": "LocationFeatureSpecification",
    name: a,
    value: true
  })),
  url: `https://www.calamon.com/apartments/${entry.slug}`
};
---
<Layout {title} {description} {canonical} jsonLd={jsonLd}>
  <article class="max-w-3xl mx-auto p-6">
    <h1 class="text-3xl font-semibold mb-4">{data.title}</h1>

    {data.heroImage && (
      <img
        src={data.heroImage}
        alt={data.title}
        class="mb-4 rounded-lg shadow"
        width="1200"
        height="675"
        loading="lazy"
      />
    )}

    <!-- Render the Markdown body -->
    <div class="prose">
      <Content />
    </div>

    {gallery.length > 0 && (
      <section class="mt-6 grid gap-4 md:grid-cols-2">
        {gallery.map((img) => (
          <img src={img} alt={`${data.title} photo`} class="rounded-md shadow" loading="lazy" />
        ))}
      </section>
    )}
  </article>
</Layout>
