---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

type ApartmentEntry = CollectionEntry<"apartment">;

const apartments: ApartmentEntry[] = (await getCollection(
  "apartment",
  (a: ApartmentEntry) => a.data.published !== false
)).sort((a, b) => (a.data.order ?? 0) - (b.data.order ?? 0) || a.data.title.localeCompare(b.data.title));

const title = "Apartments | Calamon";
const description = "Apartments in Episkopi, Crete. Seaside stays with terrace views and easy beach access.";
const canonical = "https://www.calamon.com/apartments";

// SEO: ItemList of apartments
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  itemListElement: apartments.map((entry, i) => ({
    "@type": "ListItem",
    position: i + 1,
    url: `https://www.calamon.com/apartments/${entry.slug}`,
    name: entry.data.title
  })),
};
---

<Layout {title} {description} {canonical} {jsonLd}>
  <main class="container mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-10">
    <header class="mb-6 sm:mb-8 max-w-6xl">
      <h1 class="text-[clamp(1.5rem,3.5vw,2.25rem)] font-bold tracking-tight">Apartments</h1>
      <p class="mt-2 text-[var(--color-muted)]">Choose from our available apartments in Episkopi, Crete.</p>
    </header>

    {apartments.length === 0 ? (
      <p class="text-[var(--color-muted)]">No apartments are published yet. Check back soon.</p>
    ) : (
      <section class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5 max-w-6xl">
        {apartments.map((entry: ApartmentEntry) => {
          const { data } = entry;
          const amenities: string[] = data.amenities ?? [];
          return (
            <article class="rounded-[var(--radius)] bg-[var(--color-card)] shadow-[var(--shadow-soft)] overflow-hidden hover:-translate-y-0.5 transition">
              <a
                href={`/apartments/${entry.slug}`}
                class="block focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-[var(--color-brand)]"
                aria-label={`View ${data.title}`}
              >
                {data.heroImage && (
                  <img
                    src={data.heroImage}
                    alt={data.title}
                    width="800"
                    height="450"
                    class="w-full aspect-video object-cover"
                    loading="lazy"
                    decoding="async"
                    sizes="(min-width:1024px) 33vw, (min-width:640px) 50vw, 100vw"
                  />
                )}
                <div class="p-4">
                  <h2 class="text-lg font-semibold">{data.title}</h2>
                  <p class="mt-1 text-sm text-[var(--color-muted)]">
                    {data.description}
                  </p>

                  {amenities.length > 0 && (
                    <ul class="mt-3 flex flex-wrap gap-2 text-xs text-[var(--color-muted)]">
                      {amenities.slice(0, 4).map((a: string) => (
                        <li class="rounded-full border border-white/10 bg-white/5 px-2 py-0.5">{a}</li>
                      ))}
                      {amenities.length > 4 && (
                        <li class="rounded-full border border-white/10 bg-white/5 px-2 py-0.5">
                          +{amenities.length - 4} more
                        </li>
                      )}
                    </ul>
                  )}
                </div>
              </a>
            </article>
          );
        })}
      </section>
    )}
  </main>
</Layout>
